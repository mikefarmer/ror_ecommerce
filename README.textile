h1. Project Overview

"Please create a ticket if you have issues":http://ror_ecommerce.lighthouseapp.com/home

"Please look at the homepage for more details: www.ror-e.com":http://www.ror-e.com

This is a Rails e-commerce platform.  Other e-commerce projects that
use rails, don't use rails in a standard way.  They use engines or are a separate
framework altogether.

ROR ecommerce is a *Rails 3 application* with the intent to allow developers to create
an ecommerce solution easily.  This solution includes, an Admin for  *Purchase Orders*,
*Product creation*, *Shipments*, *Fulfillment* and *creating Orders*.  There is a minimal
customer facing shopping cart understanding that this will be customized.  The cart allows
you to track your customers *cart history* and includes a *double entry accounting system*.

The project has *solr searching*, *compass* and *blueprint for CSS* and uses *jQuery*.
The gem list is quite large and the project still has a large wish list but it is the most
complete solution for Rails today and it will only get better.

Please use *Ruby 1.9.2* and enjoy *Rails 3.0*.

ROR_ecommerce is designed differently.  If you understand Rails you will understand ROR_ecommerce.
There is nothing in this project that you wouldn't see in a normal Rails application.  If you don't like
what is in the project just change it like you would in any other Rails app.

Contributors are welcome.  For now email David Henner (*drhenner@yahoo.com*) to see how you
can contribute. (send your patch if you have one.)  Soon there will be a bug tracking
system and a formal way to submit your patch.

We will always need help with UI, Documentation and code so feel free to help.

h2. Getting Started

We have a google group.  Ask question and help answer questions.
"ror_ecommerce Google-group":http://groups.google.com/group/ror_ecommerce

install rvm with ruby 1.9.2 or if you have 1.9.2 on your system your good to go

Configure your database.yml file (add the development and test database)

*# Go into config/config.yml and change the encryption_key

bq.  aes = OpenSSL::Cipher::Cipher.new('AES-256-CBC')
  set_encryption_key_to = aes.random_iv

*# gem install bundler
*# gem install ruby-debug19
*# bundle install
*# rake db:create
*# rake db:migrate
*# rake db:seed
*# rake db:test:prepare
*# git submodule init
*# git submodule update
*# gem install compass
*# gem install fancy-buttons

######compass install -r fancy-buttons -f fancy-buttons


p. Time to start solr and memcache(yep you better install them)
rake sunspot:solr:start

If you decide not to use solr, go into product.rb and delete the following

bc. searchable do
  text    :name, :default_boost => 2
  text      :product_keywords#, :multiple => true
  text      :description
  time      :deleted_at
end

bq. Take a look at setting up solr
    "Solr in 5 minutes":http://github.com/outoftime/sunspot/wiki/adding-sunspot-search-to-rails-in-5-minutes-or-less

bq. memcached -vv  ## you can config many other cache stores but
                ## the cookie store will not work (in the admin) and the DB session store will be a dog

Need to create config/config.yml and change the encryption key and paypal or auth.net information.
You can also use config/config.yml.example until you get your real info.

Paperclip will throw errors if not configured correctly.
if you are on a Ubuntu machine, change this line in environment.rb:
Paperclip.options[:command_path] = "/usr/local/bin"
into:
Paperclip.options[:command_path] = "/usr/bin"

Once everything is setup, start up the server with 'rails server' and direct it to
*localhost:3000/admin/overviews*

write down the username/password and follow the directions.

h2. TODOs:

* product sales (eg. 20% off)
* Refactor admin cart to use redis, riak or some other noSQL store

h2. Author

RoR Ecommerce was written by David Henner with contributions from:

* Oren Golan
* Yury Velikanau

h2. FYI:

Shipping categories are categories based off price:

you might have two shipping categories (light items) & (heavy items)
Have fun!!!


* I personally want to thank some people I don't even know.
  Ryan Bates and Greg Pollack, I have learned way too much from you 2
  it would only be right to give some thanks
* I'd also like to Thank one person that I do know.
  Umang Chouhan I've learned a lot from you also.
  (even if I do have to filter out some of what you say. LOL)
